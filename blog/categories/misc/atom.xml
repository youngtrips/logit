<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: misc | log(1)]]></title>
  <link href="http://youngtrips.github.io/logit/blog/categories/misc/atom.xml" rel="self"/>
  <link href="http://youngtrips.github.io/logit/"/>
  <updated>2014-11-12T21:07:19+08:00</updated>
  <id>http://youngtrips.github.io/logit/</id>
  <author>
    <name><![CDATA[Tuz]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[ssh+nginx反向代理访问内网Web Service]]></title>
    <link href="http://youngtrips.github.io/logit/blog/2013/05/31/reverse-proxy/"/>
    <updated>2013-05-31T14:14:00+08:00</updated>
    <id>http://youngtrips.github.io/logit/blog/2013/05/31/reverse-proxy</id>
    <content type="html"><![CDATA[<p>在一般的网络环境下，互联网无法直接访问到局域网的计算机，如果你想在家里访问公司局域网的计算机或者在公司想访问家里的计算机，那么需要借助特定的工具，这里以ssh+nginx反向代理访问局域网计算机的web服务器为例。
假定你有一台具有公网IP的服务器S1(211.83.241.83)以及一台在局域网开启web服务的计算机S2(172.16.18.3)，如下图所示:</p>

<p><img src="/images/reverse-proxy-net.png" alt="reverse-proxy-net.png" /></p>

<h3>概述</h3>

<p>S2通过ssh连接S1开启反向隧道，它在服务器上开启一个监听端口12345同时在将该端口影射在本地web服务端口8080上，S1上开启ngix反向代理将80端口代理到12345上，用户通过访问S1时nginx将请求代理到12345端口上，ssh通过建立好的隧道将请求传输到S2，S2从隧道中接收请求并转发到监听8080端口的web服务，并将结果通过隧道返回给S1，S1从隧道获取结果返回给nginx，nginx再将请求结果返回给用户，从而访问到局域网内的web服务。</p>

<h3>配置</h3>

<ol>
<li>在你所需要访问的web service的内网服务器S2上执行以下命令:
 <figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ssh -f -N -R &lt;服务器端口>:&lt;本地IP>:&lt;本地端口> &lt;服务器地址></span></code></pre></td></tr></table></div></figure></li>
</ol>


<p>例如:</p>

<pre><code><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ssh -f -N -L 12345:127.0.0.1:8080 211.83.241.83</span></code></pre></td></tr></table></div></figure>
</code></pre>

<p>该命令执行后会将远程服务器S1(211.83.241.83:12345)映射到本地端口8080</p>

<ol>
<li><p>在公网服务器S1上开启nginx反向代理:</p>

<p> 例如:</p>

<p> <figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>server {
</span><span class='line'>     listen       80;
</span><span class='line'>     server_name  localhost;
</span><span class='line'>     location / {
</span><span class='line'>         proxy_pass  &lt;a href="http://127.0.0.1:12345;">http://127.0.0.1:12345;&lt;/a>
</span><span class='line'>         proxy_set_header   Host             $host:80;
</span><span class='line'>         proxy_set_header   X-Real-IP        $remote_addr;
</span><span class='line'>         proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
</span><span class='line'>         proxy_set_header Via    &ldquo;nginx&rdquo;;
</span><span class='line'>     }
</span><span class='line'> }</span></code></pre></td></tr></table></div></figure></p></li>
</ol>

]]></content>
  </entry>
  
</feed>
