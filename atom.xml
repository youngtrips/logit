<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[log(1)]]></title>
  <link href="http://logit.me/atom.xml" rel="self"/>
  <link href="http://logit.me/"/>
  <updated>2013-05-29T18:00:49+08:00</updated>
  <id>http://logit.me/</id>
  <author>
    <name><![CDATA[Tuz]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[技能脚本系统实现分析]]></title>
    <link href="http://logit.me/blog/2013/05/29/ability-analyze-report/"/>
    <updated>2013-05-29T16:49:00+08:00</updated>
    <id>http://logit.me/blog/2013/05/29/ability-analyze-report</id>
    <content type="html"><![CDATA[<p><strong>Author</strong>: Tuz (<a href="&#109;&#x61;&#x69;&#108;&#x74;&#111;&#58;&#x79;&#111;&#x75;&#x6e;&#103;&#116;&#x72;&#105;&#x70;&#x73;&#64;&#109;&#x61;&#x69;&#108;&#x2e;&#x63;&#111;&#x6d;">&#x79;&#111;&#117;&#110;&#x67;&#116;&#x72;&#105;&#112;&#115;&#64;&#109;&#x61;&#105;&#108;&#46;&#x63;&#111;&#x6d;</a>)</p>

<br>


<p><strong>Date</strong>: 05.20.2013</p>

<h3>Contents</h3>

<ul>
<li><a href="#overview">概述</a></li>
<li><a href="#skill_mgr_cpp">服务器底层<code>(C++)</code>技能管理分析</a>

<ul>
<li><a href="#cpp_classess">技能C++层次类关系图</a></li>
<li><a href="#base_skill_proc">技能释放基本流程</a></li>
</ul>
</li>
<li><a href="#skill_mgr_lua">脚本层技能管理分析</a></li>
<li><a href="#script_netmsg">脚本中网络通信</a></li>
<li><a href="#zhan_skill">战职业技能分析</a>

<ul>
<li><a href="#zhan_q">Q-连刺</a></li>
<li><a href="#zhan_w">W-旋风</a></li>
<li><a href="#zhan_e">E-怒吼</a></li>
<li><a href="#zhan_r">R-冲抢</a></li>
<li><a href="#zhan_a">战普通攻击技能</a></li>
</ul>
</li>
<li><a href="#sheng_skill">圣职业技能分析</a>

<ul>
<li><a href="#sheng_q">Q-滑步</a></li>
<li><a href="#sheng_w">W-三向分身</a></li>
<li><a href="#sheng_e">E-连切</a></li>
<li><a href="#sheng_r">R-绝影斩</a></li>
</ul>
</li>
</ul>


<hr />

<h2 id="overview">概述</h2>


<p>为了更好的优化技能脚本模块，本文主要针对职业基本属性配置、技能属性配置、技能脚本实现及与其相关联的BUFF、天赋等模块进行梳理分析。</p>

<h2 id="skill_mgr_cpp">服务器底层(C++)技能的管理分析</h2>




<h3 id="cpp_classess">技能C++层次类关系图</h3>


<p><img src="images/ability-analyze-report/classes_relation.png" alt="C++类关系图" /></p>

<h3 id="base_skill_proc">技能释放基本流程</h3>


<p>技能释放由客户端输入驱动通过网络模块发送消息，服务器收到消息后查找到技能对应释放对象调用脚本系统执行对应技能的入口函数， 其执行过程如下序列图所示:
<img src="images/ability-analyze-report/ability_flow.png" alt="技能释放序列图" /></p>

<h2 id="skill_mgr_lua">脚本层技能管理分析</h2>


<p>当前脚本系统中根据功能大致可分为以下几个模块:</p>

<ol>
<li>职业基本属性配置模块(classAttTable): 通过lua table配置各个职业的基本数值属性、主要有基础HP、基础MP、基础护甲、基础法抗、基础攻击力，基础法术强度等与技能计算相关的属性，配置示例如下：</li>
</ol>


<pre><code>
    ClassAttTable = {
        [11] = {MaxHpBase = 550, ArmorBase = 0, SpellResistanceBase = 0, PhysicalPowerBase = 10, CriticalRating = 0,
                CriticalDamageIncrease = 1, ArmorPenetration = 0, ArmorPenetrationRatio = 0, AttackInterval = 900,
                AttackTimeBase = 1.11, SpellPowerBase = 10, SpellPenetration = 0, SpellPenetrationRatio = 0, SpellCDReduce = 0,
                MaxMpBase = 200, MpRecoverBase = 3, HpRecover = 5, SpellToughness = 0, HitProbability = 0, DodgeProbability = 0, ViewRange = 12},
    }
</code></pre>


<p>目前该配置由策划填写的csv表格通过工具生成lua文件所得。</p>

<ol>
<li><p>技能数值属性(skillAttTable): 通过lua table配置各个技能的基本数值属性, 包括技能消耗、技能CD时间、技能断定距离、技能伤害类型及技能伤害，该配置与职业基本属性配置一样通过csv表格由工具生成lua文件所得；</p></li>
<li><p>技能公共模块(serverSkillPublic): 主要包括技能流程中经常使用到的公共函数，包括施法前检查函数skillSelfOK, skillTargetOK，吟唱函数skillIncant以及BUFF公共函数等;</p></li>
<li><p>技能属性配置模块(skill_propertyset): 配置初始化各个技能的所有属性, 其中技能伤害，技能CD等基础数值属性直接引用技能数值属性配置，技能配置中通过大量调用接口函数InitSkillProperty实现;</p></li>
<li><p>BUFF数值配置模块(buff_propertyset): 配置方式与技能属性配置相同均通过InitSkillProperty配置</p></li>
<li><p>技能逻辑模块(skill): 各个技能的具体的执行逻辑，例如战普通攻击技能脚本逻辑/skills/skill_11001.lua</p></li>
<li><p>BUFF逻辑模块(buff)</p></li>
<li><p>天赋系统模块(genius): 包括天赋属性配置及天赋执行逻辑函数, 目前我们有些的天赋是嵌入技能脚本中执行的;</p></li>
<li><p>数值计算模块(math): 主要包括技能消耗计算，技能伤害计算等与数值相关的计算模块;</p></li>
<li><p>怪物AI模块(AI): 驱动怪物行为逻辑.</p></li>
</ol>


<p>这些模块通过脚本逻辑或者BUFF逻辑组织起来组成完成的技能逻辑，下面具体分析战及圣各个技能脚本实现。</p>

<h2 id="script_netmsg">脚本中网络通信</h2>


<p>目前项目里lua脚本与客户端的通信可以通过C++提供的功能接口进行间接通信，还可以通过调用C++提供的接口RunClientScript与客户端进行直接通信，该函数功能是通过发送客户端定义好的lua函数名及序列化好的参数调用客户端的逻辑脚本，目前脚本中大量使用RunClientScript主要:</p>

<ol>
<li>怪物AI中同步怪物属性及动作;</li>
<li>副本相关逻辑脚本;</li>
<li><p>技能脚本中控制技能特效、发送技能伤害及资源消耗;</p>

<ul>
<li><p>发送命中伤害显示playHitVisToClient()</p>

<p>  <img src="images/ability-analyze-report/playHitVisToClient.png" alt="playHitVisToClient" /></p></li>
<li><p>向客户端发送某目标免疫、闪避、抵抗的消息playStateInvalidToClient()</p>

<p>  <img src="images/ability-analyze-report/playStateInvalidToClient.png" alt="playStateInvalidToClient" /></p></li>
<li><p>skillMessageToClient(主要是控制动作特效)skillMessageToClient()</p>

<p>  <img src="images/ability-analyze-report/skillMessageToClient.png" alt="skillMessageToClient" /></p></li>
<li><p>消耗资源，同时发送相关显示消息给客户端resCostAndMsgToClient()</p>

<p>  <img src="images/ability-analyze-report/resCostAndMsgToClient.png" alt="resCostAndMsgToClient" /></p></li>
</ul>
</li>
<li><p>数值计算模块中更新角色属性(playerAttCaculate).</p>

<p> <img src="images/ability-analyze-report/playerAttCaculate.png" alt="playerAttCaculate" /></p></li>
</ol>


<h2 id="zhan_skill">战职业技能分析</h2>


<p>战技能大都通过SkillStage技能属性控制技能的每一阶段的逻辑执行, 下面具体看看每个技能的执行序列图。</p>

<h3 id="zhan_q">Q-连刺</h3>


<ul>
<li><p>需求:</p>

<p>  连续对前面扇形范围内全部敌人造成数次伤害，之后，对更大范围内敌人造成一次高伤害但自身有收招硬直的攻击</p></li>
<li><p>序列图:</p>

<p>  <img src="images/ability-analyze-report/zhan_11002.png" alt="11003序列图" /></p></li>
</ul>


<h3 id="zhan_w">W-旋风</h3>


<ul>
<li><p>需求:</p>

<p>  前冲一小段距离，并连续打击周围的敌人，可再次点击热键来释放终结技</p></li>
<li><p>序列图:</p>

<p>  <img src="images/ability-analyze-report/zhan_11003.png" alt="11003序列图" /></p></li>
</ul>


<h3 id="zhan_e">E-怒吼</h3>


<ul>
<li><p>需求:</p>

<p>  技能施放后，战士发出一声怒吼，以自身为中心x格（暂定6）范围内敌人减速y%（暂定40%），持续z秒（暂定3</p></li>
<li><p>时序图:</p>

<p>  <img src="images/ability-analyze-report/zhan_11004.png" alt="11003序列图" /></p></li>
</ul>


<h3 id="zhan_r">R-冲枪</h3>


<ul>
<li><p>需求:</p>

<p>  对方向前冲，行径中对前面区域多次造成伤害并击退，击退距离和战每段冲刺距离一样，方向为被击退者对于战的方向。过程中再次热键释放终结技升龙劈</p></li>
<li><p>时序图:</p>

<p>  <img src="images/ability-analyze-report/zhan_11005.png" alt="11005序列图" /></p></li>
</ul>


<h3 id="zhan_a">战普通攻击技能(11001)</h3>


<ul>
<li><p>时序图:</p>

<p>  <img src="images/ability-analyze-report/zhan_11001.png" alt="11001序列图" /></p></li>
</ul>


<h2 id="sheng_skill">圣职业技能分析</h2>




<h3 id="sheng_q">Q-滑步</h3>


<ul>
<li><p>需求:</p>

<p>  在出现选择框后可以再次点击该技能，选择框会出现些许形状变化，此操作用于区分真身位置，默认状况是残影前冲攻击，再次点击则是真身前冲残影留在原地</p></li>
<li><p>时序图:</p>

<p>  <img src="images/ability-analyze-report/sheng_41002.png" alt="41002序列图" /></p></li>
</ul>


<h3 id="sheng_w">W-三向分身</h3>


<ul>
<li><p>需求:</p>

<p>  出现方向的选择框并确认后，角色将朝选定的方向滑出，与角色呈120度夹角的另外2个方向会有2个残影以同样的姿势滑出</p></li>
<li><p>时序图:</p>

<p>  <img src="images/ability-analyze-report/sheng_41003.png" alt="41003序列图" /></p></li>
</ul>


<h3 id="sheng_e">E-连切</h3>


<ul>
<li><p>需求:</p>

<p> 按下快捷键，角色朝鼠标方向发动攻击，没按一次追加一次攻击，最多五次进入冷却时间（前面攻击长时间未按键也会进入冷却）,每次攻击会使目标定身1秒</p></li>
<li><p>时序图:</p>

<p>  <img src="images/ability-analyze-report/sheng_41004.png" alt="41004序列图" /></p></li>
</ul>


<h3 id="sheng_r">R-绝影斩</h3>


<ul>
<li><p>需求:</p>

<p>  按键后出现锥形选择框, 选择方向后角色做出攻击准备姿势，在2秒后对区域发动沉重AOE攻击;同时圆形提示框内的残影会立即瞬移到箭头区域对区域内的敌人实施攻击，每个残影的攻击会使敌人昏迷0.5秒</p></li>
<li><p>时序图:</p>

<p>  <img src="images/ability-analyze-report/sheng_41006.png" alt="41006序列图" /></p></li>
</ul>

]]></content>
  </entry>
  
</feed>
